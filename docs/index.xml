<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>garfcat</title>
    <link>http://www.geekgame.site/</link>
    <description>Recent content on garfcat</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Sep 2020 16:15:18 +0800</lastBuildDate><atom:link href="http://www.geekgame.site/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>golang testing 使用教程</title>
      <link>http://www.geekgame.site/post/language/golang/test/</link>
      <pubDate>Sun, 27 Sep 2020 16:15:18 +0800</pubDate>
      
      <guid>http://www.geekgame.site/post/language/golang/test/</guid>
      <description>单测是提高代码质量的重要一环,在提交代码尤其是开源社区单测一般是必需要随代码一起提交的,下面我们来看一下Golang中是如何写单元测试的。 Go中提供了专门用来写单元测试的包 testing， 运行时只需要 go test 即可。 单元测试主要分为以下三类：</description>
    </item>
    
    <item>
      <title>TCP timewait 过多怎么办</title>
      <link>http://www.geekgame.site/post/protocol/tcp_1/</link>
      <pubDate>Thu, 07 May 2020 09:53:51 +0800</pubDate>
      
      <guid>http://www.geekgame.site/post/protocol/tcp_1/</guid>
      <description>要处理timewait 过多的问题，首先应该清楚这个状态是由来，即需要了解TCP 状态迁移的过程；</description>
    </item>
    
    <item>
      <title>golang 协程调度原理</title>
      <link>http://www.geekgame.site/post/language/golang/sched/</link>
      <pubDate>Sun, 11 Aug 2019 10:23:01 +0800</pubDate>
      
      <guid>http://www.geekgame.site/post/language/golang/sched/</guid>
      <description>Go语言 最大的特点是提供简单易用的并发编程,这个并发的执行单元就是goroutine, 这个goroutine 是运行在用户态,并由GO自身来调度。调度器来决定谁来使用CPU资源，谁该让出CPU资源。 本文就来深入探讨一下Go的调度原理。</description>
    </item>
    
    <item>
      <title>通过 hello world 寻找 golang 启动过程</title>
      <link>http://www.geekgame.site/post/language/golang/start/</link>
      <pubDate>Thu, 20 Jun 2019 22:51:54 +0800</pubDate>
      
      <guid>http://www.geekgame.site/post/language/golang/start/</guid>
      <description>知其然，也要知其所以然，从今天开始研究一下golang的底层实现，首先从其启动开始；</description>
    </item>
    
    <item>
      <title>golang 栈结构</title>
      <link>http://www.geekgame.site/post/language/golang/plan9/</link>
      <pubDate>Sat, 15 Jun 2019 16:41:11 +0800</pubDate>
      
      <guid>http://www.geekgame.site/post/language/golang/plan9/</guid>
      <description>程序组成 程序由代码和数据组成，数据又有静态与动态之分；</description>
    </item>
    
    <item>
      <title>golang module 使用教程</title>
      <link>http://www.geekgame.site/post/language/golang/module/</link>
      <pubDate>Thu, 30 May 2019 17:12:47 +0800</pubDate>
      
      <guid>http://www.geekgame.site/post/language/golang/module/</guid>
      <description>Go module 是golang最新的包管理工具，可以使依赖包版本信息更明确与可控。module 是关于Go packages的集合，存储在根目录下的go.</description>
    </item>
    
    <item>
      <title>高效shell</title>
      <link>http://www.geekgame.site/post/shell/effective_shell/</link>
      <pubDate>Thu, 16 May 2019 19:34:57 +0800</pubDate>
      
      <guid>http://www.geekgame.site/post/shell/effective_shell/</guid>
      <description>shell 使用超强组合 oh-my-zsh + zsh-autosuggestions + z - jump around。</description>
    </item>
    
    <item>
      <title>MQTT 基本概念</title>
      <link>http://www.geekgame.site/post/protocol/mqtt/</link>
      <pubDate>Wed, 15 May 2019 13:24:24 +0800</pubDate>
      
      <guid>http://www.geekgame.site/post/protocol/mqtt/</guid>
      <description>&lt;p&gt;MQTT(Message Queuing Telemetry Transport，消息队列遥测传输协议)是最初由IBM开发的一种基于发布/订阅模式的轻量级通信协议,工作在tcp/ip协议簇上。主要优势是
低开销、低带宽，在lot上应用较为广泛。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mac  sed 报错</title>
      <link>http://www.geekgame.site/post/shell/mac%E4%B8%8B%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8D%E5%AD%97/</link>
      <pubDate>Mon, 13 May 2019 12:36:43 +0800</pubDate>
      
      <guid>http://www.geekgame.site/post/shell/mac%E4%B8%8B%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8D%E5%AD%97/</guid>
      <description>mac 下的sed使用方法与linux略有不同，如果按照Linux方式使用sed -i替换文本时会报如下错误</description>
    </item>
    
    <item>
      <title>Index</title>
      <link>http://www.geekgame.site/archives/</link>
      <pubDate>Mon, 13 May 2019 12:22:44 +0800</pubDate>
      
      <guid>http://www.geekgame.site/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://www.geekgame.site/about/</link>
      <pubDate>Fri, 10 May 2019 17:38:49 +0800</pubDate>
      
      <guid>http://www.geekgame.site/about/</guid>
      <description></description>
    </item>
    
    <item>
      <title>搜索</title>
      <link>http://www.geekgame.site/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.geekgame.site/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
