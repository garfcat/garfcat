<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>garfcat</title>
    <link>http://www.geekgame.site/</link>
    <description>Recent content on garfcat</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 May 2019 19:34:57 +0800</lastBuildDate>
    
	<atom:link href="http://www.geekgame.site/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>高效shell</title>
      <link>http://www.geekgame.site/posts/shell/effective_shell/</link>
      <pubDate>Thu, 16 May 2019 19:34:57 +0800</pubDate>
      
      <guid>http://www.geekgame.site/posts/shell/effective_shell/</guid>
      <description> shell 使用超强组合 oh-my-zsh + zsh-autosuggestions + z - jump around。
 oh-my-zsh : 目前非常火的终端配置，只需要简单下载到本地，就可以使用；
 autosuggestions: 补全已经输入过的命令； jump around : 感觉这个非常有用，在目录的跳转之间节省大量的时间；  命令  hstr: 查找历史命令，比Ctrl+R 方便太多，如果使用zsh 需要执行hstr &amp;ndash;show-configuration &amp;gt;&amp;gt; ~/.zshrc , source ~/.zshrc ；
 htop: 加强版的top, 安装与介绍可以看一下这里  </description>
    </item>
    
    <item>
      <title>MQTT 基本概念</title>
      <link>http://www.geekgame.site/posts/protocol/mqtt/</link>
      <pubDate>Wed, 15 May 2019 13:24:24 +0800</pubDate>
      
      <guid>http://www.geekgame.site/posts/protocol/mqtt/</guid>
      <description> MQTT 概述 MQTT(Message Queuing Telemetry Transport，消息队列遥测传输协议)是最初由IBM开发的一种基于发布/订阅模式的轻量级通信协议,工作在tcp/ip协议簇上。主要优势是 低开销、低带宽，在lot上应用较为广泛。
MQTT 架构  MQTT 是c/s模型，每个客户端通过tcp连接到服务器(broker)； MQTT 是面向消息的。每个消息都是独立的数据块，对于broker来说是不透明的； 每条消息都会发送到一个地址，这个地址称为主题(topic),订阅主题的每个客户端都会收到发布到该主题上的每条消息；  如下所示： 客户端 A、B、C都连接到一个中间broker;
B、C都订阅topic :dev_info 来获取其他设备的设备信息；
A发布设备信息到topic dev_info，broker 将该消息转发给所有的订阅者即 BC；
主题匹配 mqtt 主题是分层级的，通过／划分层级。如 A/B/G ; 注意在订阅时可以使用通配符，发布时不可以使用通配符；
通配符 + 匹配任何单个主题，# 匹配任意名称任意数量的主题；
例如： A/+/G 可以匹配 A/B/G A/C/G A/D/G 等
A/# 可以配置 A/B/C/D/E/F/G
Qos mqtt 支持三种级别的服务质量:
&amp;ldquo;至多一次&amp;rdquo; &amp;ldquo;至少一次&amp;rdquo; &amp;ldquo;只有一次&amp;rdquo;：
最后遗愿 持久 安全 参考  维基百科 MQTT
 MQTT manpage MQTT and CoAP, IoT Protocols  </description>
    </item>
    
    <item>
      <title>mac  sed 报错</title>
      <link>http://www.geekgame.site/posts/shell/mac%E4%B8%8B%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8D%E5%AD%97/</link>
      <pubDate>Mon, 13 May 2019 12:36:43 +0800</pubDate>
      
      <guid>http://www.geekgame.site/posts/shell/mac%E4%B8%8B%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8D%E5%AD%97/</guid>
      <description>mac 下使用sed -i 替换命令时 会报错
$sed -i &#39;s/xxxx/yyy/g&#39; test sed: 1: &amp;quot;test&amp;quot;: extra characters at the end of p command  解决方法
sed -i &amp;quot;&amp;quot; &amp;quot;s/XX/YY/g&amp;quot; test  ============================================
sed 用法
sed: illegal option -- - usage: sed script [-Ealn] [-i extension] [file ...] sed [-Ealn] [-i extension] [-e script] ... [-f script_file] ... [file ...] -i 后边需要添加备份文件的后缀名,如果不需要可以使用&amp;quot;&amp;quot;,但是不可以忽略 如 sed -i &amp;quot;.bak&amp;quot; &#39;s/xxxx/yyy/g&#39; test 会将替换后的文本写入test.bak  </description>
    </item>
    
    <item>
      <title>Index</title>
      <link>http://www.geekgame.site/archives/</link>
      <pubDate>Mon, 13 May 2019 12:22:44 +0800</pubDate>
      
      <guid>http://www.geekgame.site/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://www.geekgame.site/about/</link>
      <pubDate>Fri, 10 May 2019 17:38:49 +0800</pubDate>
      
      <guid>http://www.geekgame.site/about/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>