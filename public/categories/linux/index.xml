<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 有趣</title>
    <link>https://www.geekgame.site/categories/linux/</link>
    <description>Recent content in Linux on 有趣</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Tue, 07 Mar 2023 14:08:45 +0800</lastBuildDate>
    <atom:link href="https://www.geekgame.site/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>设备硬件信息获取</title>
      <link>https://www.geekgame.site/post/linux/hardware/</link>
      <pubDate>Tue, 07 Mar 2023 14:08:45 +0800</pubDate>
      <guid>https://www.geekgame.site/post/linux/hardware/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;有时我们需要基于设备的硬件信息来生成唯一的序列号，本文从物理机和容器两个角度描述获取硬件信息的几种方式。&lt;/p&gt;&#xA;&lt;h2 id=&#34;硬件信息&#34;&gt;硬件信息&lt;/h2&gt;&#xA;&lt;p&gt;主要包括 cpu id, 主板序列号，&lt;/p&gt;&#xA;&lt;h3 id=&#34;cpu-id&#34;&gt;CPU ID&lt;/h3&gt;&#xA;&lt;p&gt;在2006年，Intel决定取消将唯一标识符（Unique Identifier，UID）分配给每个CPU的计划。在取消该计划后，没有任何一款Intel CPU具有可用的UID或类似的标识符。&lt;/p&gt;&#xA;&lt;p&gt;dmidecode -t processor | grep ID 命令获取的是处理器的ID号码，而不是CPU序列号。在过去，Intel的处理器ID号码与CPU序列号是相关的。但是，自从Intel取消了CPU序列号计划后，处理器ID号码已经成为处理器的唯一标识符。但是需要注意的是，处理器ID号码仅用于识别处理器的型号和版本，而不是用作安全或加密目的。处理器ID是一个用于唯一标识处理器型号和版本的数字或字符串。每个处理器型号都有一个唯一的处理器ID，该ID包含有关处理器的各种信息，例如生产商、处理器系列、制造工艺、特性等等。&lt;/p&gt;&#xA;&lt;p&gt;处理器ID是一个用于唯一标识处理器型号和版本的数字或字符串。每个处理器型号都有一个唯一的处理器ID，该ID包含有关处理器的各种信息，例如生产商、处理器系列、制造工艺、特性等等。&lt;/p&gt;&#xA;&lt;p&gt;以下是一个举例：&lt;/p&gt;&#xA;&lt;p&gt;假设您有一台计算机，其处理器型号为“Intel(R) Core(TM) i7-10700K CPU @ 3.80GHz”。您可以使用 dmidecode -t processor | grep ID 命令来获取该处理器的ID。对于这个处理器，处理器ID可能会显示为&amp;quot;0x906E9&amp;quot;。这个处理器ID包含有关处理器的信息，例如：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;quot;0x9&amp;quot;表示该处理器是第9代英特尔酷睿处理器（Intel Core Processor）。&lt;/li&gt;&#xA;&lt;li&gt;&amp;quot;0x06&amp;quot;表示该处理器的系列为酷睿i7系列（Core i7 Series）。&lt;/li&gt;&#xA;&lt;li&gt;&amp;quot;0xE9&amp;quot;表示该处理器的型号为i7-10700K。&lt;br&gt;&#xA;其他数字和字母则包含有关制造工艺、特性等方面的信息。&lt;br&gt;&#xA;处理器ID是一个用于唯一标识处理器的数字或字符串，它包含有关处理器型号和版本的各种信息，这些信息可以用于确定处理器的特性、性能和兼容性等方面。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;主板序列号&#34;&gt;主板序列号&lt;/h3&gt;&#xA;&lt;p&gt;主板序列号(board id)是一串唯一的数字和字母组合，用于标识计算机主板的身份和生产信息。每个主板都有一个唯一的序列号，类似于身份证号码或者汽车的车辆识别码（VIN）。主板序列号通常被存储在主板上的电子芯片中，并可以通过操作系统或者特定的软件程序来获取&lt;/p&gt;&#xA;&lt;h3 id=&#34;磁盘序列号&#34;&gt;磁盘序列号&lt;/h3&gt;&#xA;&lt;p&gt;磁盘序列号是一个磁盘驱动器的唯一标识符。它是由硬盘制造商预先配置的，通常由一串数字或字母组成。&lt;/p&gt;&#xA;&lt;h2 id=&#34;宿主机下的获取方式&#34;&gt;宿主机下的获取方式&lt;/h2&gt;&#xA;&lt;h3 id=&#34;cpu-id-的获取方式&#34;&gt;CPU ID 的获取方式&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# dmidecode -t processor | grep ID&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;ID: E3 &lt;span class=&#34;m&#34;&gt;06&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;05&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;00&lt;/span&gt; FF FB 8B 0F&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;ID: E3 &lt;span class=&#34;m&#34;&gt;06&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;05&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;00&lt;/span&gt; FF FB 8B 0F&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>一文读懂iptables/netfilter附带实战</title>
      <link>https://www.geekgame.site/post/linux/iptables/</link>
      <pubDate>Thu, 13 Oct 2022 14:14:13 +0800</pubDate>
      <guid>https://www.geekgame.site/post/linux/iptables/</guid>
      <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;iptables 是一个命令行工具，用来配置包过滤的规则的，而真正实现这些规则的程序位于内核层，叫做 netfilter, 可以讲iptables理解为netfilter的客户端，iptables 与 netfilter 共同组成了包过滤软件。&#xA;平常工作交流中 iptables 也经常代指该内核级防火墙，iptables 用于 ipv4, 相应的 ip6tables 用于 IPv6。&lt;/p&gt;&#xA;&lt;h2 id=&#34;概念介绍&#34;&gt;概念介绍&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img alt=&#34;iptables转发过程&#34; src=&#34;https://www.geekgame.site/iptables/iptables.png&#34;&gt;&lt;br&gt;&#xA;（&lt;a href=&#34;https://wiki.archlinux.org/title/iptables_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&#34;&gt;图片引用&lt;/a&gt;）&lt;/p&gt;&#xA;&lt;h3 id=&#34;hook&#34;&gt;hook&lt;/h3&gt;&#xA;&lt;p&gt;iptables 在内核是对数据包做修改、转发、丢弃等操作的，而这些操作都是在一个个 hook 上完成的，hook 就是注册数据包处理函数的地方。hook点都是预定义好的，一共划分了五个hook点，分别为:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;NF_IP_PRE_ROUTING: 接收到的包进入协议栈后由该hook上注册的函数来处理，这是在查询路由之前;&lt;/li&gt;&#xA;&lt;li&gt;NF_IP_LOCAL_IN: 查询路由后判断数据包是发往本机的，则首先进入该hook点，由该hook点上注册的函数来处理;&lt;/li&gt;&#xA;&lt;li&gt;NF_IP_FORWARD: 查询路由后判断数据包是不是本机的，则进入该hook点，由该hook点上注册的函数来处理;&lt;/li&gt;&#xA;&lt;li&gt;NF_IP_LOCAL_OUT: 本机发出的数据包首先进入该hook点，由该hook点上注册的函数来处理;&lt;/li&gt;&#xA;&lt;li&gt;NF_IP_POST_ROUTING: 数据包在发出本机之前，路由判断之后， 进入该hook点，由该hook点上注册的函数来处理;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;表链规则&#34;&gt;表、链、规则&lt;/h3&gt;&#xA;&lt;p&gt;iptables 是由表(table)来组织的，而表又是由链(chain) 组成，链中包含了一个或者多个规则(rule)，规则既是对数据包处理的具体定义，所以总体来看&#xA;iptables -&amp;gt; table -&amp;gt; chain -&amp;gt; rule。&lt;/p&gt;&#xA;&lt;h4 id=&#34;表&#34;&gt;表&lt;/h4&gt;&#xA;&lt;p&gt;iptables 一共有五个table,分别为：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;raw 用于配置数据包，提供一个让数据包不被系统跟踪的机制;&lt;/li&gt;&#xA;&lt;li&gt;filter 判断是否允许一个包通过;&lt;/li&gt;&#xA;&lt;li&gt;nat 用于 网络地址转换（例如：端口转发）;&lt;/li&gt;&#xA;&lt;li&gt;mangle 修改包的 IP 头，例如TTL，增加或减少包可以经过的跳数;&lt;/li&gt;&#xA;&lt;li&gt;security 用于 强制访问控制 网络规则;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;链&#34;&gt;链&lt;/h4&gt;&#xA;&lt;p&gt;链中包含了具体的规则，按照顺序进行匹配,内置了五个chain 与 hook 一一对应:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux 常用命令</title>
      <link>https://www.geekgame.site/post/linux/command/command/</link>
      <pubDate>Tue, 11 Jan 2022 10:47:48 +0800</pubDate>
      <guid>https://www.geekgame.site/post/linux/command/command/</guid>
      <description>&lt;h2 id=&#34;find&#34;&gt;find&lt;/h2&gt;&#xA;&lt;h3 id=&#34;find-多个条件-and&#34;&gt;find 多个条件 AND&lt;/h3&gt;&#xA;&lt;p&gt;使用多个条件查找，默认是 AND 操作&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ find . -name &lt;span class=&#34;s2&#34;&gt;&amp;#34;*.bash&amp;#34;&lt;/span&gt; -mtime +180 -size +2K -exec ls -l &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在上面的命令中，我们告诉 find 搜索名称中带有字符串 .bash 的文件/目录，它们应该超过 180 天并且大小应该大于 2KB。&lt;br&gt;&#xA;最后，我们使用 -exec 选项对 find 命令产生的结果执行 ls -l 命令。&lt;/p&gt;&#xA;&lt;h3 id=&#34;find-多个条件-or&#34;&gt;find 多个条件 OR&lt;/h3&gt;&#xA;&lt;p&gt;让我们考虑一个场景，我们需要修改我们之前使用的示例并获取带有字符串 .bash 和 .txt 的文件。要满足此要求，请在 find 命令中使用 -o 选项来指示逻辑 OR 操作。&#xA;给出的是完整的命令&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt; find . &lt;span class=&#34;se&#34;&gt;\(&lt;/span&gt; -name &lt;span class=&#34;s2&#34;&gt;&amp;#34;*.bash&amp;#34;&lt;/span&gt; -o -name &lt;span class=&#34;s2&#34;&gt;&amp;#34;*.txt&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\)&lt;/span&gt; -mtime +180 -size +2k -exec ls -lh &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
  </channel>
</rss>
