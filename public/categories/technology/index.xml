<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technology on 有趣</title>
    <link>https://www.geekgame.site/categories/technology/</link>
    <description>Recent content in Technology on 有趣</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Mon, 29 Jan 2024 14:20:46 +0800</lastBuildDate>
    <atom:link href="https://www.geekgame.site/categories/technology/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>docker 容器日志过大问题</title>
      <link>https://www.geekgame.site/post/container/docker/log/</link>
      <pubDate>Mon, 29 Jan 2024 14:20:46 +0800</pubDate>
      <guid>https://www.geekgame.site/post/container/docker/log/</guid>
      <description>docker 日志文件存放哪些日志 Docker容器的标准输出（stdout）和标准错误输出（stderr）被发送到容器的日志驱动程序，这些日志可以通过 docker logs 命令来访问。默认情况下，Docker将这些日志存储在宿主机上的 /var/lib/docker/containers// 目录中，每个容器都有一个单独的目录。&#xA;如何清理 docker 日志文件 清理Docker日志文件的方法通常包括手动清理以及使用工具自动清理；&#xA;业务控制 减少业务的输出，可以控制日志量，但这并不是一个好的方法。&#xA;临时清理 可以通过以下命令临时清理，但这只是临时的方法，不能根治。&#xA;1logs=$(find /var/lib/docker/containers/ -name *-json.log*) ; for log in $logs ; do echo &amp;#34;clean logs : $log&amp;#34; ; cat /dev/null &amp;gt; $log ; done Docker日志驱动配置 使用Docker的日志驱动配置选项来限制日志文件大小和保留时间。你可以在运行容器时使用 --log-opt 选项来配置日志的最大大小和保留时间，从而使Docker自动清理过期的日志。 关于日志驱动配置可以分为以下两个方法：&#xA;启动容器时进行设置 1# max-size 最大数值 2# max-file 最大日志数 3$ docker run -it --log-opt max-size=10m --log-opt max-file=3 nginx 通过daemon.json 全局修改 1{ 2 &amp;#34;log-driver&amp;#34;:&amp;#34;json-file&amp;#34;, 3 &amp;#34;log-opts&amp;#34;:{ 4 &amp;#34;max-size&amp;#34; :&amp;#34;50m&amp;#34;,&amp;#34;max-file&amp;#34;:&amp;#34;1&amp;#34; 5 } 6} 这个需要重启docker .</description>
    </item>
    <item>
      <title>Docker Proxy</title>
      <link>https://www.geekgame.site/post/container/docker/docker-proxy/</link>
      <pubDate>Mon, 27 Mar 2023 13:55:01 +0800</pubDate>
      <guid>https://www.geekgame.site/post/container/docker/docker-proxy/</guid>
      <description>docker-proxy Docker Proxy（docker-proxy）是 Docker 中的一个组件，它允许 Docker 容器通过代理服务器进行网络通信。当 Docker 容器需要访问互联网或者其他容器时，Docker 会使用 docker-proxy 作为代理服务器来转发请求和响应。</description>
    </item>
    <item>
      <title>Wc</title>
      <link>https://www.geekgame.site/post/linux/wc/</link>
      <pubDate>Mon, 24 Oct 2022 14:01:37 +0800</pubDate>
      <guid>https://www.geekgame.site/post/linux/wc/</guid>
      <description>Insert Lead paragraph here.</description>
    </item>
    <item>
      <title>Workflow</title>
      <link>https://www.geekgame.site/post/workflow/workflow/</link>
      <pubDate>Mon, 17 Oct 2022 11:15:13 +0800</pubDate>
      <guid>https://www.geekgame.site/post/workflow/workflow/</guid>
      <description>Insert Lead paragraph here.</description>
    </item>
    <item>
      <title>mongodb snapshot</title>
      <link>https://www.geekgame.site/post/database/mongodb_snapshot/</link>
      <pubDate>Fri, 30 Sep 2022 09:52:34 +0800</pubDate>
      <guid>https://www.geekgame.site/post/database/mongodb_snapshot/</guid>
      <description>Insert Lead paragraph here.</description>
    </item>
    <item>
      <title>当执行 docker run 时会发生什么事情...</title>
      <link>https://www.geekgame.site/post/container/docker/component/</link>
      <pubDate>Mon, 29 Aug 2022 22:41:05 +0800</pubDate>
      <guid>https://www.geekgame.site/post/container/docker/component/</guid>
      <description>当我们执行 docker 命令(例如 docker run , docker pull )时发生了什么，解答这个问题，我们需要了解 docker 是由哪几个组件组成的，请看下图:</description>
    </item>
    <item>
      <title>Release_mysql_disk</title>
      <link>https://www.geekgame.site/post/database/release_mysql_disk/</link>
      <pubDate>Tue, 23 Aug 2022 10:18:36 +0800</pubDate>
      <guid>https://www.geekgame.site/post/database/release_mysql_disk/</guid>
      <description>Insert Lead paragraph here.</description>
    </item>
    <item>
      <title>es 与 mongodb比较，es 是否可以作为存储使用呢？</title>
      <link>https://www.geekgame.site/post/database/ev_vs_mongodb/</link>
      <pubDate>Thu, 11 Aug 2022 14:08:18 +0800</pubDate>
      <guid>https://www.geekgame.site/post/database/ev_vs_mongodb/</guid>
      <description>(图片拍摄于千灵山风景区,云山相印，云彩仿佛是山的倒影，让人心旷神怡。)&#xA;两者对比 mongodb&#x9;vs es 对比 mongodb es 定位 解决关系数据库强 schema 约束的问题 解决关系数据库的全文搜索性能问题 schema 无 无 事务 4.0之后支持 不支持 索引 B树 LSM 倒排索引 时效性 高 有延迟(秒级) 可靠性 高 有丢数据风险 性能 读写均衡 性能较低 可扩展性 方便 非常方便 mongodb和es 虽然都是文档数据存储,但是两者的定位确是不同: mongodb 主要定位是文档数据库,提供数据存储, 倾向与OLTP; es 主要定位是文档搜索引擎,提供搜索服务, 倾向于OLAP; 所以mongodb 主要用于数据的管理, es用于数据的检索服务;&#xA;那么是否可以用es来作为数据存储服务呢? es作为存储面临最大的一个问题就是mapping 是不可变的, 如果非要改变可以通过新增字段或者重建索引来实现; 如果是新增加的字段，根据 Dynamic 的设置分为以下三种状况：&#xA;当 Dynamic 设置为 true 时，一旦有新增字段的文档写入，Mapping 也同时被更新。 当 Dynamic 设置为 false 时，索引的 Mapping 是不会被更新的，新增字段的数据无法被索引，也就是无法被搜索，但是信息会出现在 _source 中。 当 Dynamic 设置为 strict 时，文档写入会失败。 如果字段已经存在，这种情况下，es 是不允许修改字段的类型的，因为 es 是根据 Lucene 实现的倒排索引，一旦生成后就不允许修改，如果希望改变字段类型，必须使用 Reindex API 重建索引。</description>
    </item>
    <item>
      <title>Ebpf</title>
      <link>https://www.geekgame.site/post/linux/ebpf/ebpf/</link>
      <pubDate>Wed, 27 Jul 2022 09:53:56 +0800</pubDate>
      <guid>https://www.geekgame.site/post/linux/ebpf/ebpf/</guid>
      <description>Insert Lead paragraph here.</description>
    </item>
    <item>
      <title>Dht</title>
      <link>https://www.geekgame.site/post/p2p/dht/</link>
      <pubDate>Tue, 26 Jul 2022 18:07:07 +0800</pubDate>
      <guid>https://www.geekgame.site/post/p2p/dht/</guid>
      <description>Insert Lead paragraph here.</description>
    </item>
    <item>
      <title>Http_eof</title>
      <link>https://www.geekgame.site/post/protocol/http_eof/</link>
      <pubDate>Tue, 05 Jul 2022 14:45:08 +0800</pubDate>
      <guid>https://www.geekgame.site/post/protocol/http_eof/</guid>
      <description>最近迁移服务，发现客户端 http 投递数据经常失败，报错为EOF错误。分析该问题</description>
    </item>
    <item>
      <title>Controller</title>
      <link>https://www.geekgame.site/post/k8s/karmada/controller/</link>
      <pubDate>Thu, 21 Oct 2021 16:23:06 +0800</pubDate>
      <guid>https://www.geekgame.site/post/k8s/karmada/controller/</guid>
      <description>Insert Lead paragraph here.</description>
    </item>
    <item>
      <title>Bgp</title>
      <link>https://www.geekgame.site/post/protocol/bgp/</link>
      <pubDate>Tue, 19 Oct 2021 22:31:50 +0800</pubDate>
      <guid>https://www.geekgame.site/post/protocol/bgp/</guid>
      <description>Insert Lead paragraph here.</description>
    </item>
    <item>
      <title>Arch</title>
      <link>https://www.geekgame.site/post/k8s/network/calico/arch/</link>
      <pubDate>Tue, 19 Oct 2021 22:19:15 +0800</pubDate>
      <guid>https://www.geekgame.site/post/k8s/network/calico/arch/</guid>
      <description>Insert Lead paragraph here.</description>
    </item>
    <item>
      <title>容器网络加速 dpdk ebpf</title>
      <link>https://www.geekgame.site/post/container/network/</link>
      <pubDate>Tue, 19 Oct 2021 20:09:14 +0800</pubDate>
      <guid>https://www.geekgame.site/post/container/network/</guid>
      <description>如何通过 DPDK 对容器进行网络加速？</description>
    </item>
    <item>
      <title>How_to_access_k8s_from_outside</title>
      <link>https://www.geekgame.site/post/k8s/how_to_access_k8s_from_outside/</link>
      <pubDate>Wed, 13 Oct 2021 10:49:48 +0800</pubDate>
      <guid>https://www.geekgame.site/post/k8s/how_to_access_k8s_from_outside/</guid>
      <description>Insert Lead paragraph here.</description>
    </item>
    <item>
      <title>Ports</title>
      <link>https://www.geekgame.site/post/k8s/ports/</link>
      <pubDate>Sun, 26 Sep 2021 19:29:25 +0800</pubDate>
      <guid>https://www.geekgame.site/post/k8s/ports/</guid>
      <description>学习 K8S 过程中会遇到各种 port,如 port、targetPort、containerPort、NodePort、hostPort</description>
    </item>
    <item>
      <title>Flannel</title>
      <link>https://www.geekgame.site/post/protocol/flannel/</link>
      <pubDate>Tue, 17 Aug 2021 19:11:57 +0800</pubDate>
      <guid>https://www.geekgame.site/post/protocol/flannel/</guid>
      <description>Insert Lead paragraph here.</description>
    </item>
    <item>
      <title>Rbac</title>
      <link>https://www.geekgame.site/post/k8s/rbac/</link>
      <pubDate>Thu, 05 Aug 2021 16:53:32 +0800</pubDate>
      <guid>https://www.geekgame.site/post/k8s/rbac/</guid>
      <description>Insert Lead paragraph here.</description>
    </item>
    <item>
      <title>我的 UDP 数据包丢在哪里了？</title>
      <link>https://www.geekgame.site/post/linux/where_my_packet_drop/</link>
      <pubDate>Mon, 21 Jun 2021 19:53:41 +0800</pubDate>
      <guid>https://www.geekgame.site/post/linux/where_my_packet_drop/</guid>
      <description>Insert Lead paragraph here.</description>
    </item>
    <item>
      <title>Samll_packet2</title>
      <link>https://www.geekgame.site/post/issues/samll_packet2/</link>
      <pubDate>Wed, 16 Jun 2021 23:00:51 +0800</pubDate>
      <guid>https://www.geekgame.site/post/issues/samll_packet2/</guid>
      <description>Insert Lead paragraph here.</description>
    </item>
  </channel>
</rss>
